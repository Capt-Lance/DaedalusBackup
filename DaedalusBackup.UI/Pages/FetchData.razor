@page "/fetchdata"
@using DaedalusBackup.UI.Data
@using DaedalusBackup.UI.Services
@inject WeatherForecastService ForecastService
@inject HyperVService hvService
<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@if (vms == null)
{
    <p>Loading VMs ...</p>
}
else 
{
    @foreach (var vm in vms)
    {
        <p>@vm.Name</p>
    }
}

@functions {
    WeatherForecast[] forecasts;
    List<VirtualMachine> vms;

    protected override async Task OnInitAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
        vms = await hvService.GetVMs();
        Console.WriteLine("hello client");
    }
}
